########################################################################################################################
#                                                                                                                      #
#                                    Properties for the SchemaRegistry client API                                      #
#                                                                                                                      #
########################################################################################################################

# Comma-separated list of URLs for schema registry instances that can be used to register or look up schemas. If you wish to get a connection to a mocked schema registry for testing, you can specify a scope using the 'mock://' pseudo-protocol. For example, 'mock://my-scope-name'.
schema.registry.url=http://0.0.0.0:8081

# Maximum number of schemas to create or cache locally.
#max.schemas.per.subject=1000

# The SSL protocol used to generate the SSLContext. The default is 'TLSv1.3' when running with Java 11 or newer, 'TLSv1.2' otherwise. This value should be fine for most use cases. Allowed values in recent JVMs are 'TLSv1.2' and 'TLSv1.3'. 'TLS', 'TLSv1.1', 'SSL', 'SSLv2' and 'SSLv3' may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities. With the default value for this config and 'ssl.enabled.protocols', clients will downgrade to 'TLSv1.2' if the server does not support 'TLSv1.3'. If this config is set to 'TLSv1.2', clients will not use 'TLSv1.3' even if it is one of the values in ssl.enabled.protocols and the server only supports 'TLSv1.3'.
#schema.registry.ssl.protocol=

# The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.
#schema.registry.ssl.provider=

# The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.
#schema.registry.ssl.keymanager.algorithm=

# The algorithm used by the trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.
#schema.registry.ssl.trustmanager.algorithm=

# The file format of the key store file. This is optional for client.
#schema.registry.ssl.keystore.type=JKS

# The location of the key store file. This is optional for client and can be used for two-way authentication for client.
#schema.registry.keystore.location=

# The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.
#schema.registry.keystore.password=

# The password of the private key in the key store file. This is optional for client.
#schema.registry.ssl.key.password=

# The file format of the trust store file.
#schema.registry.ssl.truststore.type=JKS

# The location of the trust store file.
#schema.registry.ssl.truststore.location=

# The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.
#schema.registry.ssl.truststore.password=
